{"version":3,"file":"main.js","mappings":"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","sources":["webpack://copilot-testing/./src/minesweeper/mineSweeper.ts","webpack://copilot-testing/./src/minesweeper/mineSweeperView.ts","webpack://copilot-testing/./src/vocab-test/vocabList.ts","webpack://copilot-testing/./src/vocabTest.ts","webpack://copilot-testing/./src/index.ts"],"sourcesContent":["export type Cell = {\r\n  isMine: boolean;\r\n  isRevealed: boolean;\r\n  isFlagged: boolean;\r\n  adjacentMines: number;\r\n};\r\n\r\n\r\nexport class Minesweeper {\r\n  board: Cell[][];\r\n  rows: number;\r\n  cols: number;\r\n  mines: number;\r\n  gameOver: boolean;\r\n  private firstClick: boolean;\r\n\r\n  constructor(rows = 8, cols = 8, mines = 10) {\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.mines = mines;\r\n    this.gameOver = false;\r\n    this.firstClick = true;\r\n    this.board = this.generateEmptyBoard();\r\n  }\r\n\r\n  private generateEmptyBoard(): Cell[][] {\r\n    return Array.from({ length: this.rows }, () =>\r\n      Array.from({ length: this.cols }, () => ({\r\n        isMine: false,\r\n        isRevealed: false,\r\n        isFlagged: false,\r\n        adjacentMines: 0,\r\n      }))\r\n    );\r\n  }\r\n\r\n  private placeMines(firstRow: number, firstCol: number) {\r\n    // Place mines, but never on the first clicked cell or its neighbors\r\n    let placed = 0;\r\n    const forbidden: Set<string> = new Set();\r\n    for (let dr = -1; dr <= 1; dr++) {\r\n      for (let dc = -1; dc <= 1; dc++) {\r\n        const nr = firstRow + dr;\r\n        const nc = firstCol + dc;\r\n        if (nr >= 0 && nr < this.rows && nc >= 0 && nc < this.cols) {\r\n          forbidden.add(`${nr},${nc}`);\r\n        }\r\n      }\r\n    }\r\n    while (placed < this.mines) {\r\n      const r = Math.floor(Math.random() * this.rows);\r\n      const c = Math.floor(Math.random() * this.cols);\r\n      if (!this.board[r]![c]!.isMine && !forbidden.has(`${r},${c}`)) {\r\n        this.board[r]![c]!.isMine = true;\r\n        placed++;\r\n      }\r\n    }\r\n    // Calculate adjacent mines\r\n    for (let r = 0; r < this.rows; r++) {\r\n      for (let c = 0; c < this.cols; c++) {\r\n        if (!this.board[r]![c]!.isMine) {\r\n          this.board[r]![c]!.adjacentMines = this.countAdjacentMines(this.board, r, c);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  countAdjacentMines(board: Cell[][], row: number, col: number): number {\r\n    let count = 0;\r\n    for (let dr = -1; dr <= 1; dr++) {\r\n      for (let dc = -1; dc <= 1; dc++) {\r\n        if (dr === 0 && dc === 0) continue;\r\n        const nr = row + dr;\r\n        const nc = col + dc;\r\n        if (nr >= 0 && nr < this.rows && nc >= 0 && nc < this.cols) {\r\n          if (board[nr]![nc]!.isMine) count++;\r\n        }\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  reveal(row: number, col: number): void {\r\n    if (this.gameOver || this.board[row]![col]!.isRevealed || this.board[row]![col]!.isFlagged) return;\r\n\r\n    if (this.firstClick) {\r\n      // Place mines after first click, ensure first cell is empty (adjacentMines === 0)\r\n      let safe = false;\r\n      while (!safe) {\r\n        // Reset board\r\n        this.board = this.generateEmptyBoard();\r\n        this.placeMines(row, col);\r\n        if (!this.board[row]![col]!.isMine && this.board[row]![col]!.adjacentMines === 0) {\r\n          safe = true;\r\n        }\r\n      }\r\n      this.firstClick = false;\r\n    }\r\n\r\n    this.board[row]![col]!.isRevealed = true;\r\n    if (this.board[row]![col]!.isMine) {\r\n      this.gameOver = true;\r\n      return;\r\n    }\r\n    if (this.board[row]![col]!.adjacentMines === 0) {\r\n      for (let dr = -1; dr <= 1; dr++) {\r\n        for (let dc = -1; dc <= 1; dc++) {\r\n          if (dr === 0 && dc === 0) continue;\r\n          const nr = row + dr;\r\n          const nc = col + dc;\r\n          if (nr >= 0 && nr < this.rows && nc >= 0 && nc < this.cols) {\r\n            if (!this.board[nr]![nc]!.isRevealed) {\r\n              this.reveal(nr, nc);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleFlag(row: number, col: number): void {\r\n  if (this.gameOver || this.board[row]![col]!.isRevealed) return;\r\n  this.board[row]![col]!.isFlagged = !this.board[row]![col]!.isFlagged;\r\n  }\r\n\r\n  isWin(): boolean {\r\n    if (!this.board) return false;\r\n    for (let r = 0; r < this.rows; r++) {\r\n      for (let c = 0; c < this.cols; c++) {\r\n        const cell = this.board[r]?.[c];\r\n        if (!cell) return false;\r\n        if (!cell.isMine && !cell.isRevealed) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Minesweeper } from './mineSweeper';\r\n\r\nexport class mineSweeperView {\r\n  private game: Minesweeper;\r\n  private container: HTMLElement;\r\n\r\n  constructor(containerId: string, rows = 8, cols = 8, mines = 10) {\r\n    this.game = new Minesweeper(rows, cols, mines);\r\n    const el = document.getElementById(containerId);\r\n    if (!el) throw new Error('Container not found');\r\n    this.container = el;\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = '';\r\n    // Flags and bombs display\r\n    const flags = this.countFlags();\r\n    const bombs = this.game.mines;\r\n    const infoDiv = document.createElement('div');\r\n    infoDiv.style.display = 'flex';\r\n    infoDiv.style.justifyContent = 'center';\r\n    infoDiv.style.alignItems = 'center';\r\n    infoDiv.style.marginBottom = '1em';\r\n    infoDiv.innerHTML = `<span style=\"font-size:1.2em;\">🚩 ${flags} / 💣 ${bombs}</span>`;\r\n    this.container.appendChild(infoDiv);\r\n\r\n    const table = document.createElement('table');\r\n    table.style.borderCollapse = 'collapse';\r\n    for (let r = 0; r < this.game.rows; r++) {\r\n      const tr = document.createElement('tr');\r\n      for (let c = 0; c < this.game.cols; c++) {\r\n        const cell = this.game.board[r]![c]!;\r\n        const td = document.createElement('td');\r\n        td.style.width = '32px';\r\n        td.style.height = '32px';\r\n        td.style.textAlign = 'center';\r\n        td.style.border = '1px solid #888';\r\n        td.style.background = cell.isRevealed ? '#e0e0e0' : '#b0b0b0';\r\n        td.style.cursor = cell.isRevealed ? 'default' : 'pointer';\r\n\r\n        // Reveal all bombs on game over\r\n        if (this.game.gameOver && cell.isMine) {\r\n          td.style.background = '#ffb3b3';\r\n          if (cell.isFlagged) {\r\n            td.textContent = '❌';\r\n            td.style.color = 'red';\r\n            td.style.fontWeight = 'bold';\r\n          } else {\r\n            td.textContent = '💣';\r\n          }\r\n        } else if (cell.isRevealed) {\r\n          if (cell.isMine) {\r\n            td.textContent = '💣';\r\n            td.style.background = '#ffb3b3';\r\n          } else if (cell.adjacentMines > 0) {\r\n            td.textContent = String(cell.adjacentMines);\r\n            td.style.color = '#333';\r\n          }\r\n        } else if (cell.isFlagged) {\r\n          td.textContent = '🚩';\r\n        }\r\n\r\n        td.oncontextmenu = (e) => {\r\n          e.preventDefault();\r\n          if (!this.game.gameOver) {\r\n            this.game.toggleFlag(r, c);\r\n            this.render();\r\n          }\r\n        };\r\n        td.onclick = () => {\r\n          if (!this.game.gameOver) {\r\n            this.game.reveal(r, c);\r\n            this.render();\r\n            if (this.game.gameOver) {\r\n              setTimeout(() => {\r\n                alert('Game Over!');\r\n                location.reload();\r\n              }, 100);\r\n            } else if (this.game.isWin()) {\r\n              setTimeout(() => {\r\n                alert('You Win!');\r\n                location.reload();\r\n              }, 100);\r\n            }\r\n          }\r\n        };\r\n        tr.appendChild(td);\r\n      }\r\n      table.appendChild(tr);\r\n    }\r\n    this.container.appendChild(table);\r\n  }\r\n\r\n  private countFlags(): number {\r\n    let count = 0;\r\n    for (let r = 0; r < this.game.rows; r++) {\r\n      for (let c = 0; c < this.game.cols; c++) {\r\n        if (this.game.board[r]![c]!.isFlagged) count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n}","// Spanish-German vocabulary list\r\nexport const vocabList = [\r\n  { spanish: \"gato\", german: \"Katze\" },\r\n  { spanish: \"perro\", german: \"Hund\" },\r\n  { spanish: \"casa\", german: \"Haus\" },\r\n  { spanish: \"libro\", german: \"Buch\" },\r\n  { spanish: \"sol\", german: \"Sonne\" },\r\n  { spanish: \"agua\", german: \"Wasser\" },\r\n  { spanish: \"árbol\", german: \"Baum\" },\r\n  { spanish: \"mesa\", german: \"Tisch\" },\r\n  { spanish: \"silla\", german: \"Stuhl\" },\r\n  { spanish: \"ventana\", german: \"Fenster\" },\r\n  { spanish: \"puerta\", german: \"Tür\" },\r\n  { spanish: \"coche\", german: \"Auto\" },\r\n  { spanish: \"camino\", german: \"Weg\" },\r\n  { spanish: \"niño\", german: \"Kind\" },\r\n  { spanish: \"mujer\", german: \"Frau\" },\r\n  { spanish: \"hombre\", german: \"Mann\" },\r\n  { spanish: \"ciudad\", german: \"Stadt\" },\r\n  { spanish: \"comida\", german: \"Essen\" },\r\n  { spanish: \"escuela\", german: \"Schule\" },\r\n  { spanish: \"amigo\", german: \"Freund\" },\r\n  { spanish: \"familia\", german: \"Familie\" },\r\n  { spanish: \"trabajo\", german: \"Arbeit\" },\r\n  { spanish: \"dinero\", german: \"Geld\" },\r\n  { spanish: \"tiempo\", german: \"Zeit\" },\r\n  { spanish: \"mano\", german: \"Hand\" },\r\n  { spanish: \"ojo\", german: \"Auge\" },\r\n  { spanish: \"cielo\", german: \"Himmel\" },\r\n  { spanish: \"mar\", german: \"Meer\" },\r\n  { spanish: \"montaña\", german: \"Berg\" },\r\n  { spanish: \"flor\", german: \"Blume\" },\r\n  { spanish: \"pájaro\", german: \"Vogel\" },\r\n  { spanish: \"pez\", german: \"Fisch\" },\r\n  { spanish: \"pan\", german: \"Brot\" },\r\n  { spanish: \"leche\", german: \"Milch\" },\r\n  { spanish: \"zapato\", german: \"Schuh\" },\r\n  { spanish: \"camisa\", german: \"Hemd\" },\r\n  { spanish: \"reloj\", german: \"Uhr\" },\r\n  { spanish: \"luz\", german: \"Licht\" },\r\n  { spanish: \"noche\", german: \"Nacht\" },\r\n];\r\n","import type { VocabQuestion } from './types/VocabQuestion';\r\nimport { vocabList } from './vocab-test/vocabList';\r\n\r\n\r\nexport class VocabTest {\r\n  private questions: VocabQuestion[] = [];\r\n  private currentIndex: number = 0;\r\n\r\n  constructor() {}\r\n\r\n  async init() {\r\n    this.questions = vocabList.map((entry) => {\r\n      // Pick 3 wrong options\r\n      const wrong = this.shuffle(\r\n        vocabList.filter((v) => v.german !== entry.german)\r\n      ).slice(0, 3);\r\n      const options = this.shuffle([\r\n        entry.german,\r\n        ...wrong.map((v) => v.german),\r\n      ]);\r\n      return {\r\n        spanish: entry.spanish,\r\n        options,\r\n        answer: entry.german,\r\n      };\r\n    });\r\n    this.currentIndex = 0;\r\n    this.shuffleQuestions();\r\n  }\r\n\r\n  private shuffle<T>(array: T[]): T[] {\r\n    return array\r\n      .map((value) => ({ value, sort: Math.random() }))\r\n      .sort((a, b) => a.sort - b.sort)\r\n      .map(({ value }) => value);\r\n  }\r\n\r\n  private shuffleQuestions() {\r\n    this.questions = this.shuffle(this.questions);\r\n  }\r\n\r\n  public getQuestion(): VocabQuestion | null {\r\n    if (this.currentIndex < this.questions.length) {\r\n      return this.questions[this.currentIndex] ?? null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public nextQuestion(): VocabQuestion | null {\r\n    this.currentIndex++;\r\n    if (this.currentIndex < this.questions.length) {\r\n      return this.questions[this.currentIndex] ?? null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public reset(): void {\r\n    this.currentIndex = 0;\r\n    this.shuffleQuestions();\r\n  }\r\n}\r\n","import { mineSweeperView } from './minesweeper/mineSweeperView';\r\nimport { VocabTest } from './vocabTest';\r\n\r\nclass VocabTestApp {\r\n\tprivate vocabTest: VocabTest;\r\n\tprivate correctCount: number = 0;\r\n\tprivate minesweeperStarted: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.vocabTest = new VocabTest();\r\n\t\tthis.initAndStart();\r\n\t}\r\n\r\n\tprivate async initAndStart() {\r\n\t\tawait this.vocabTest.init();\r\n\t\tthis.renderQuestion();\r\n\t}\r\n\r\n\trenderQuestion() {\r\n\t\tconst question = this.vocabTest.getQuestion();\r\n\t\tif (!question) {\r\n\t\t\tthis.renderEnd();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet app = document.getElementById('app');\r\n\t\tif (!app) {\r\n\t\t\tapp = document.createElement('div');\r\n\t\t\tapp.id = 'app';\r\n\t\t\tdocument.body.appendChild(app);\r\n\t\t}\r\n\t\t// Centering wrapper\r\n\t\tapp.innerHTML = `\r\n\t\t\t\t\t<div style=\"display: flex; justify-content: center; align-items: center; min-height: 100vh;\">\r\n\t\t\t\t\t\t<div id=\"quiz-section\" style=\"${\r\n\t\t\t\t\t\t\tthis.correctCount >= 5 ? 'display:none;' : ''\r\n\t\t\t\t\t\t} max-width: 400px; width: 100%;\">\r\n\t\t\t\t\t\t\t<h2>Was heißt <span style=\\\"color: #0074D9\\\">${\r\n\t\t\t\t\t\t\t\tquestion.spanish\r\n\t\t\t\t\t\t\t}</span> auf Deutsch?</h2>\r\n\t\t\t\t\t\t\t<div id=\"options\">\r\n\t\t\t\t\t\t\t\t${question.options\r\n\t\t\t\t\t\t\t\t\t.map(\r\n\t\t\t\t\t\t\t\t\t\t(opt: string, i: number) =>\r\n\t\t\t\t\t\t\t\t\t\t\t`<button data-opt=\\\"${opt}\\\" style=\\\"margin: 0.5em;\\\">${opt}</button>`\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.join('')}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div id=\"result\" style=\"margin-top:1em;\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"minesweeper-section\" style=\"${\r\n\t\t\t\t\t\t\tthis.correctCount >= 5 ? '' : 'display:none;'\r\n\t\t\t\t\t\t} max-width: 500px; width: 100%; margin-left: 2em;\">\r\n\t\t\t\t\t\t\t<h2>Good. Play a round</h2>\r\n\t\t\t\t\t\t\t<div id=\"minesweeper-container\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`;\r\n\r\n\t\t// If minesweeper should be visible, show and start it\r\n\t\tif (this.correctCount >= 5) {\r\n\t\t\tthis.showMinesweeper();\r\n\t\t}\r\n\r\n\t\tconst optionsDiv = document.getElementById('options');\r\n\t\tconst resultDiv = document.getElementById('result');\r\n\t\tif (optionsDiv && resultDiv) {\r\n\t\t\tlet answered = false;\r\n\t\t\toptionsDiv.addEventListener('click', (e) => {\r\n\t\t\t\tconst target = e.target as HTMLElement;\r\n\t\t\t\tif (target.tagName === 'BUTTON' && !answered) {\r\n\t\t\t\t\tanswered = true;\r\n\t\t\t\t\tconst selected = target.getAttribute('data-opt');\r\n\t\t\t\t\tif (selected === question.answer) {\r\n\t\t\t\t\t\tresultDiv.innerHTML =\r\n\t\t\t\t\t\t\t'<span style=\"color:green\">Richtig!</span>';\r\n\t\t\t\t\t\tthis.correctCount++;\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tthis.correctCount === 5 &&\r\n\t\t\t\t\t\t\t!this.minesweeperStarted\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis.minesweeperStarted = true;\r\n\t\t\t\t\t\t\tsetTimeout(() => this.renderQuestion(), 800);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresultDiv.innerHTML = `<span style=\\\"color:red\\\">Falsch! Richtig war: ${question.answer}</span>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Add Weiter button\r\n\t\t\t\t\tconst weiterBtn = document.createElement('button');\r\n\t\t\t\t\tweiterBtn.textContent = 'Weiter';\r\n\t\t\t\t\tweiterBtn.style.marginLeft = '1em';\r\n\t\t\t\t\tweiterBtn.onclick = () => {\r\n\t\t\t\t\t\tthis.vocabTest.nextQuestion();\r\n\t\t\t\t\t\tthis.renderQuestion();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tresultDiv.appendChild(document.createElement('br'));\r\n\t\t\t\t\tresultDiv.appendChild(weiterBtn);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate showMinesweeper() {\r\n\t\tconst section = document.getElementById('minesweeper-section');\r\n\t\tif (section && !section.dataset.started) {\r\n\t\t\tnew mineSweeperView('minesweeper-container', 8, 8, 10);\r\n\t\t\tsection.dataset.started = 'true';\r\n\t\t}\r\n\t}\r\n\r\n\trenderEnd() {\r\n\t\tlet app = document.getElementById('app');\r\n\t\tif (!app) {\r\n\t\t\tapp = document.createElement('div');\r\n\t\t\tapp.id = 'app';\r\n\t\t\tdocument.body.appendChild(app);\r\n\t\t}\r\n\t\tapp.innerHTML = `<h2>Test beendet!</h2>`;\r\n\t}\r\n}\r\n\r\nnew VocabTestApp();\r\n"],"names":["rows","cols","mines","this","gameOver","firstClick","board","generateEmptyBoard","Array","from","length","isMine","isRevealed","isFlagged","adjacentMines","placeMines","firstRow","firstCol","placed","forbidden","Set","dr","dc","nr","nc","add","r","Math","floor","random","c","has","countAdjacentMines","row","col","count","reveal","safe","toggleFlag","isWin","cell","containerId","game","Minesweeper","el","document","getElementById","Error","container","render","innerHTML","flags","countFlags","bombs","infoDiv","createElement","style","display","justifyContent","alignItems","marginBottom","appendChild","table","borderCollapse","tr","td","width","height","textAlign","border","background","cursor","textContent","color","fontWeight","String","oncontextmenu","e","preventDefault","onclick","setTimeout","alert","location","reload","vocabList","spanish","german","questions","currentIndex","init","map","entry","wrong","shuffle","filter","v","slice","options","answer","shuffleQuestions","array","value","sort","a","b","getQuestion","nextQuestion","reset","correctCount","minesweeperStarted","vocabTest","VocabTest","initAndStart","renderQuestion","question","app","id","body","opt","i","join","showMinesweeper","optionsDiv","resultDiv","addEventListener","target","tagName","getAttribute","weiterBtn","marginLeft","renderEnd","section","dataset","started","mineSweeperView"],"sourceRoot":""}